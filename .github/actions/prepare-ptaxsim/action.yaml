name: Prepare PTAXSIM database
description: Downloads and extracts the PTAXSIM database file from S3
inputs:
  PTAXSIM_DB_BASE_URI:
    required: false
    description: S3 URI of PTAXSIM database versions
    default: "s3://ccao-data-public-us-east-1/ptaxsim"
  ASSUMED_ROLE:
    description: AWS role used for S3 actions
outputs:
  PTAXSIM_DB_DIR:
    description: "PTAXSIM database directory on runner"
    value: ${{ steps.set_db_dir.outputs.PTAXSIM_DB_DIR }}
  PTAXSIM_VERSION:
    description: "PTAXSIM database version"
    value: ${{ steps.version_db.outputs.PTAXSIM_VERSION }}

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set database directory
      id: set_db_dir
      run: |
        PDIR=$RUNNER_TEMP
        echo "PTAXSIM_DB_DIR=$PDIR" >> $GITHUB_ENV
        echo "PTAXSIM_DB_DIR=$PDIR" >> $GITHUB_OUTPUT
      shell: bash

    - name: Get database version
      id: version_db
      run: |
        DESCRIPTION_PATH=$(echo "${{ github.workspace }}/DESCRIPTION" | sed 's/\\/\//g')
        echo "PTAXSIM_VERSION=$(sed -n 's/.*Wants_DB_Version: \([0-9]*\.[0-9]*\.[0-9]\).*/\1/p' $DESCRIPTION_PATH)" >> $GITHUB_ENV
        echo "PTAXSIM_VERSION=${{ env.PTAXSIM_VERSION }}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Cache database
      uses: actions/cache@v3.3.2
      id: cache_db
      with:
        path: ${{ env.PTAXSIM_DB_DIR }}/ptaxsim.db.bz2
        key: ${{ format('{0}-{1}', env.PTAXSIM_VERSION, hashFiles('DESCRIPTION')) }}
        enableCrossOsArchive: true

    - name: Configure AWS credentials
      if: steps.cache_db.outputs.cache-hit != 'true'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.ASSUMED_ROLE }}
        aws-region: us-east-1

    - name: Fetch database file
      id: fetch_db
      if: steps.cache_db.outputs.cache-hit != 'true'
      run: |
        aws s3 cp ${{ inputs.PTAXSIM_DB_BASE_URI }}/ptaxsim-${{ env.PTAXSIM_VERSION }}.db.bz2 ptaxsim.db.bz2 --quiet
      shell: bash
      working-directory: ${{ env.PTAXSIM_DB_DIR }}

    - name: Unpack database (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install -y pbzip2
        pbzip2 -dk ptaxsim.db.bz2
      shell: bash
      working-directory: ${{ env.PTAXSIM_DB_DIR }}

    - name: Unpack database (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install pbzip2
        pbzip2 -dk ptaxsim.db.bz2
      shell: bash
      working-directory: ${{ env.PTAXSIM_DB_DIR }}

    - name: Unpack database (Windows)
      if: runner.os == 'Windows'
      run: |
        7z x ptaxsim.db.bz2
      shell: cmd
      working-directory: ${{ env.PTAXSIM_DB_DIR }}
