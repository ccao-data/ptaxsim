on:
  workflow_call:
    inputs:
      PTAXSIM_DB_BASE_URL:
        required: false
        type: string
        default: "s3://ccao-data-public-us-east-1/ptaxsim"
    outputs:
      PTAXSIM_VERSION:
        description: "PTAXSIM database version"
        value: ${{ jobs.download-db.outputs.output1 }}

name: prepare-ptaxsim

jobs:
  download-db:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    outputs:
      output1: ${{ steps.version_db.outputs.PTAXSIM_VERSION }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get database version
        id: version_db
        run: |
          echo "PTAXSIM_VERSION=$(grep -Po "(?<=Wants_DB_Version: )[0-9]*\.[0-9]*\.[0-9]*" ${{ github.workspace }}/DESCRIPTION)" >> $GITHUB_ENV
          echo "PTAXSIM_VERSION=$(grep -Po "(?<=Wants_DB_Version: )[0-9]*\.[0-9]*\.[0-9]*" ${{ github.workspace }}/DESCRIPTION)" >> $GITHUB_OUTPUT

      - name: Check database cache
        uses: actions/cache/restore@v3
        id: check_db
        with:
          path: ptaxsim.db.bz2
          key: ${{ format('{0}-{1}', env.PTAXSIM_VERSION, hashFiles('DESCRIPTION')) }}
          lookup-only: true

      - name: Fetch database file
        id: fetch_db
        if: steps.check_db.outputs.cache-hit != 'true'
        run: |
          aws s3 cp ${{ inputs.PTAXSIM_DB_BASE_URL }}/ptaxsim-${{ env.PTAXSIM_VERSION }}.db.bz2 ${{ github.workspace }}/ptaxsim.db.bz2
        shell: bash

      - name: Save database cache
        uses: actions/cache/save@v3
        id: save_db
        if: steps.check_db.outputs.cache-hit != 'true'
        with:
          path: ptaxsim.db.bz2
          key: ${{ format('{0}-{1}', env.PTAXSIM_VERSION, hashFiles('DESCRIPTION')) }}
          enableCrossOsArchive: true
